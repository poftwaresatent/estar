------------------------------------------------------------------------
r143 | poftwaresatent | 2007-10-02 11:15:08 -0700 (Tue, 02 Oct 2007) | 4 lines
Changed paths:
   A /branches/estar-consistency-check (from /trunk/estar:142)
   M /branches/estar-consistency-check/Makefile.in
   M /branches/estar-consistency-check/bin/Makefile.am
   M /branches/estar-consistency-check/bin/Makefile.in
   M /branches/estar-consistency-check/config.guess
   M /branches/estar-consistency-check/config.sub
   M /branches/estar-consistency-check/configure
   M /branches/estar-consistency-check/depcomp
   M /branches/estar-consistency-check/estar/Makefile.in
   M /branches/estar-consistency-check/gfx/Makefile.in
   M /branches/estar-consistency-check/install-sh
   M /branches/estar-consistency-check/ltmain.sh
   M /branches/estar-consistency-check/missing
   M /branches/estar-consistency-check/mkinstalldirs
   M /branches/estar-consistency-check/pnf/Makefile.in

This branch is for implementing consistency checks: is the result of
repairing the navigation function the same as replanning from scratch?
If not, why and by how much do they differ?

------------------------------------------------------------------------
r144 | poftwaresatent | 2007-10-02 11:17:24 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   A /branches/estar-consistency-check/bin/test_estar_replanner.cpp

quick test by Filip Bouljon that demonstrates there are inconsistencies between replanning from scratch and repairing an existing navigation function
------------------------------------------------------------------------
r145 | poftwaresatent | 2007-10-02 12:52:31 -0700 (Tue, 02 Oct 2007) | 6 lines
Changed paths:
   M /branches/estar-consistency-check/estar/Facade.hpp
   A /branches/estar-consistency-check/estar/FacadeReadInterface.hpp
   A /branches/estar-consistency-check/estar/FacadeWriteInterface.hpp
   M /branches/estar-consistency-check/estar/Makefile.am
   M /branches/estar-consistency-check/estar/Makefile.in

Split estar::Facade into two interfaces: read and write. The aim is to
provide another Facade implementation that compares different Facades,
and which will thus have several (possibly distinct) readers and
writers which we want to be able to use independently in the existing
code.

------------------------------------------------------------------------
r146 | poftwaresatent | 2007-10-02 13:51:34 -0700 (Tue, 02 Oct 2007) | 4 lines
Changed paths:
   M /branches/estar-consistency-check/estar/Facade.hpp
   M /branches/estar-consistency-check/estar/FacadeReadInterface.hpp
   M /branches/estar-consistency-check/estar/dump.cpp
   M /branches/estar-consistency-check/estar/dump.hpp
   M /branches/estar-consistency-check/estar/graphics.cpp
   M /branches/estar-consistency-check/estar/graphics.hpp
   M /branches/estar-consistency-check/estar/util.cpp
   M /branches/estar-consistency-check/estar/util.hpp

Extended FacadeReadInterface to give const access to Algorithm, Grid,
and Kernel. Switched dump, graphics, and util code to use
FacadeReadInterface instead of Facade.

------------------------------------------------------------------------
r147 | poftwaresatent | 2007-10-02 15:21:20 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/estar/Algorithm.cpp
   M /branches/estar-consistency-check/estar/Algorithm.hpp
   M /branches/estar-consistency-check/estar/Facade.cpp
   M /branches/estar-consistency-check/estar/Facade.hpp
   M /branches/estar-consistency-check/estar/FacadeWriteInterface.hpp

added Reset() to FacadeWriteInterface (and Facade), made Algorithm::Reset() public and documented it... rereading the implementation made me add some comments and questions in there as well
------------------------------------------------------------------------
r148 | poftwaresatent | 2007-10-02 15:23:26 -0700 (Tue, 02 Oct 2007) | 4 lines
Changed paths:
   A /branches/estar-consistency-check/estar/ComparisonFacade.cpp
   A /branches/estar-consistency-check/estar/ComparisonFacade.hpp
   M /branches/estar-consistency-check/estar/Makefile.am
   M /branches/estar-consistency-check/estar/Makefile.in

The new class ComparisonFacade will be used to compare dynamic replanning
with complete replanning (after reset). Will cook up some graphics and
statistics do help in analysing discrepancies.

------------------------------------------------------------------------
r149 | poftwaresatent | 2007-10-02 17:32:06 -0700 (Tue, 02 Oct 2007) | 4 lines
Changed paths:
   M /branches/estar-consistency-check/gfx/Makefile.am
   M /branches/estar-consistency-check/gfx/Makefile.in
   D /branches/estar-consistency-check/gfx/MetaMousehandler.cpp
   D /branches/estar-consistency-check/gfx/MetaMousehandler.hpp
   M /branches/estar-consistency-check/gfx/Mousehandler.hpp

Completely reworked Mousehandler, using the approach of splitting
estar::Facade into separate read and write interfaces. The two new
concrete Mousehandlers are ObstacleMousehandler and GoalMousehandler.

------------------------------------------------------------------------
r150 | poftwaresatent | 2007-10-02 18:26:57 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   A /branches/estar-consistency-check/gfx/Mousehandler.cpp

oops forgot file
------------------------------------------------------------------------
r151 | poftwaresatent | 2007-10-02 18:27:22 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/gfx/Mousehandler.hpp
   M /branches/estar-consistency-check/gfx/Viewport.cpp
   M /branches/estar-consistency-check/gfx/Viewport.hpp

using shared_ptr instead of raw pointers
------------------------------------------------------------------------
r152 | poftwaresatent | 2007-10-02 18:29:09 -0700 (Tue, 02 Oct 2007) | 3 lines
Changed paths:
   M /branches/estar-consistency-check/estar/AlphaKernel.cpp
   M /branches/estar-consistency-check/estar/AlphaKernel.hpp
   M /branches/estar-consistency-check/estar/Kernel.hpp
   M /branches/estar-consistency-check/estar/LSMKernel.cpp
   M /branches/estar-consistency-check/estar/LSMKernel.hpp
   M /branches/estar-consistency-check/estar/NF1Kernel.cpp

"scale" moved to Kernel base class to make it straightforward to wrap
existing instances into a Facade. NF1Kernel simply always has scale == 1.

------------------------------------------------------------------------
r153 | poftwaresatent | 2007-10-02 18:29:40 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/estar/FacadeWriteInterface.hpp

documentation update
------------------------------------------------------------------------
r154 | poftwaresatent | 2007-10-02 18:35:11 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/estar/Facade.cpp
   M /branches/estar-consistency-check/estar/Facade.hpp

can now wrap a Facade around existing sets of Algorithm/Kernel/Grid (and using shared_ptr instead of scoped_ptr)
------------------------------------------------------------------------
r155 | poftwaresatent | 2007-10-02 18:36:37 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/bin/Makefile.am
   M /branches/estar-consistency-check/bin/Makefile.in
   M /branches/estar-consistency-check/bin/test_estar_gfx.cpp
   A /branches/estar-consistency-check/bin/test_estar_replan_gfx.cpp
   M /branches/estar-consistency-check/bin/test_pnf_gfx.cpp

adaptations to recent refactorings and changes, and added test_estar_replan_gfx which is a graphical tool for visualizing differences between a "master" facade (which always gets reset and replanned) and a "sample" facade (which uses dynamic repairs of an existing navigation function)
------------------------------------------------------------------------
r156 | poftwaresatent | 2007-10-02 19:59:45 -0700 (Tue, 02 Oct 2007) | 3 lines
Changed paths:
   M /branches/estar-consistency-check/bin/test_dbg_opt.cpp
   M /branches/estar-consistency-check/bin/test_fake_os.cpp
   M /branches/estar-consistency-check/estar/Algorithm.cpp
   M /branches/estar-consistency-check/estar/AlphaKernel.cpp
   M /branches/estar-consistency-check/estar/Facade.cpp
   M /branches/estar-consistency-check/estar/Grid.cpp
   M /branches/estar-consistency-check/estar/LSMKernel.cpp
   M /branches/estar-consistency-check/estar/Propagator.cpp
   M /branches/estar-consistency-check/estar/Queue.cpp
   M /branches/estar-consistency-check/estar/Region.cpp
   M /branches/estar-consistency-check/estar/Sprite.cpp
   M /branches/estar-consistency-check/estar/Upwind.cpp
   M /branches/estar-consistency-check/estar/check.cpp
   M /branches/estar-consistency-check/estar/dump.cpp
   M /branches/estar-consistency-check/estar/graphics.cpp
   A /branches/estar-consistency-check/estar/pdebug.hpp
   M /branches/estar-consistency-check/estar/util.cpp
   M /branches/estar-consistency-check/estar/util.hpp
   M /branches/estar-consistency-check/gfx/Mousehandler.cpp
   M /branches/estar-consistency-check/pnf/Flow.cpp

Finally cleaned up that mess with PDEBUG() and related macros and
types. Outsourced to estar/pdebug.hpp, read the documentation there.

------------------------------------------------------------------------
r157 | poftwaresatent | 2007-10-02 20:00:06 -0700 (Tue, 02 Oct 2007) | 1 line
Changed paths:
   M /branches/estar-consistency-check/estar/pdebug.hpp

oops, dangling test code
------------------------------------------------------------------------
r158 | poftwaresatent | 2007-10-02 20:35:50 -0700 (Tue, 02 Oct 2007) | 5 lines
Changed paths:
   M /branches/estar-consistency-check/estar/ComparisonFacade.cpp
   M /branches/estar-consistency-check/gfx/Mousehandler.cpp
   M /branches/estar-consistency-check/gfx/Subwindow.cpp
   M /branches/estar-consistency-check/gfx/Subwindow.hpp

Debugged mouse click dispatch and the fact that the master got reset
at each cycle. Now test_estar_replan_gfx runs nicely, even though the
clicks seems to be slightly off. Maybe half a cell? Then I shouldn't
use floor() but round() or so, but I don't care that much right now...

------------------------------------------------------------------------
